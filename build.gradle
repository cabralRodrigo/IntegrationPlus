buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

repositories {
    maven {
        name = "chickenbones"
        url = "http://chickenbones.net/maven"
    }
}

ext.configFile = file('build.properties')
ext.config = parseConfig(configFile)

apply plugin: 'forge'

version = "${config.version}.${config.build_number}"
group= "rc.mods.integrationplus"
archivesBaseName = "${config.mod_name}-${config.mc_version}"

sourceSets.main.java.srcDir "src/api/java"

minecraft {
    version = "${config.mc_version}-${config.forge_version}"
    runDir = "eclipse"

    replace "@BUILD@", config.build_number
    replace "@VERSION@", config.version

    replaceIn 'LibMod.java'
}

dependencies {
	compile "codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev"
	compile "codechicken:CodeChickenCore:1.7.10-1.0.7.46:dev"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.5.111:dev"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task incrementBuildNumber << {
    config.build_number = (config.build_number.toString().toInteger()) + 1
    configFile.withWriter {
        config.toProperties().store(it, "")
    }
}


def parseConfig(File config) {
    config.withReader {
        def prop = new Properties()
        prop.load(it)
        return (new ConfigSlurper().parse(prop))
    }
}

defaultTasks 'incrementBuildNumber', 'build'